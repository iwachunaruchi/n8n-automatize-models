# Docker Compose para desarrollo local con Poetry
version: '3.8'

services:
  # MinIO - Object Storage
  minio:
    image: minio/minio:latest
    container_name: minio-dev
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio_dev_data:/data
    command: server /data --console-address ":9001"
    networks:
      - dev-network

  # MinIO Setup
  minio-setup:
    image: minio/mc:latest
    container_name: minio-setup-dev
    depends_on:
      - minio
    networks:
      - dev-network
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb myminio/document-degraded || true;
      /usr/bin/mc mb myminio/document-clean || true;
      /usr/bin/mc mb myminio/document-restored || true;
      /usr/bin/mc mb myminio/document-training || true;
      echo 'Buckets de desarrollo creados';
      "

  # API de Desarrollo con hot reload
  api-dev:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: api-dev
    ports:
      - "8000:8000"
    environment:
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_SECURE: "false"
      ENVIRONMENT: development
      DEBUG: "true"
      PYTHONPATH: /app
      WATCHFILES_FORCE_POLLING: "true"
    depends_on:
      - minio
    volumes:
      - ./api:/app/api
      - ./src:/app/src
      - ./config:/app/config
      - ./scripts:/app/scripts
      - ./outputs:/app/outputs
      - ./models:/app/models
    networks:
      - dev-network

volumes:
  minio_dev_data:

networks:
  dev-network:
    driver: bridge
