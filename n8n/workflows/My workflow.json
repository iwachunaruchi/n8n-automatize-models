{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"status\": \"error\",\n  \"message\": \"Only clean documents can generate synthetic training data\",\n  \"classification\": \"={{$('Analyze Document Only').item.json.body.document_type}}\",\n  \"uploaded_to\": \"={{$('Upload to Degraded Bucket').item.json.body.bucket}}\"\n}",
        "options": {}
      },
      "id": "190fe8f8-af89-421e-abbd-6641b9b701a6",
      "name": "Response - Error (Degraded)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1520,
        608
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.document_type }}",
              "value2": "documento_limpio"
            }
          ]
        }
      },
      "id": "92141da2-3772-418d-8ac3-82bf22249331",
      "name": "Check if Clean Document",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        576,
        256
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "6298d4d3-48d4-4ce6-a29e-d0e3bc7376c5",
      "name": "Merge Original Data",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        784,
        400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0a969238-cf34-497c-95c8-d247c004dffc",
              "leftValue": "={{ $json.document_type }}",
              "rightValue": "documento_limpio",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        976,
        400
      ],
      "id": "e078deaf-5449-4750-bad0-2a3db5dc8597",
      "name": "Route Based on Classification"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://doc-restoration-api:8000/synthetic/training-pairs",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "clean_bucket",
              "value": "document-clean"
            },
            {
              "name": "count",
              "value": "10"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "id": "59d6793d-e916-40fe-9db2-042af71d809a",
      "name": "Generate Training Pairs1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1520,
        272
      ]
    },
    {
      "parameters": {
        "url": "=http://doc-restoration-api:8000/jobs/{{ $json.job_id }}",
        "options": {
          "response": {
            "response": {}
          }
        }
      },
      "id": "b593274a-5052-437a-aba4-1a391fdaff35",
      "name": "Check Generation Status1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1920,
        288
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.status}}",
              "value2": "completed"
            }
          ]
        }
      },
      "id": "f9f1513c-9853-4b3e-80d4-07f98de185db",
      "name": "Check Completion1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2144,
        288
      ]
    },
    {
      "parameters": {
        "amount": 5,
        "unit": "seconds"
      },
      "id": "7d67a9e6-2d3f-408f-a583-4fc1d4f6229c",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        1920,
        432
      ],
      "webhookId": "21ac7ea6-2897-47bf-8cce-e32c54127ac1"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"status\": \"success\",\n  \"message\": \"Synthetic data generation completed\",\n  \"classification\": \"={{$('Analyze Document Only').item.json.body.document_type}}\",\n  \"uploaded_to\": \"={{$('Upload to Clean Bucket').item.json.body.bucket}}\",\n  \"generated_pairs\": \"={{$json.total_files_created}}\",\n  \"target_bucket\": \"document-training\"\n}",
        "options": {}
      },
      "id": "9d8a7be7-7fd0-4276-9e03-6749211a9519",
      "name": "Response - Success1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        2368,
        208
      ]
    },
    {
      "parameters": {
        "url": "http://doc-restoration-api:8000/synthetic/stats/document-training",
        "options": {}
      },
      "id": "822930cd-fadb-4a99-bdc7-9b14896f7e40",
      "name": "Update Dataset Stats1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2144,
        96
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://doc-restoration-api:8000/files/upload",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "bucket",
              "value": "document-clean"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "File"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "90e73132-483a-47e3-9ee3-a2bd1efc9b04",
      "name": "Upload to Clean Bucket1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1248,
        272
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://doc-restoration-api:8000/files/upload",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "bucket",
              "value": "document-degraded"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "File"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "1ad6c021-fe85-40bf-b3cb-16ed9b7ba09c",
      "name": "Upload to Degraded Bucket1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1248,
        528
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "data-generation",
        "responseMode": "responseNode",
        "options": {
          "binaryData": false,
          "rawBody": true
        }
      },
      "id": "72aa6908-b45d-41c2-9462-7f96fcb498ee",
      "name": "Webhook - Data Upload1",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        16,
        416
      ],
      "webhookId": "data-generation"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Responde siempre en español.\n\nAnaliza cuidadosamente la imagen proporcionada, que corresponde a un documento escaneado o fotografiado. Evalúa si el documento se encuentra en buen estado o presenta algún tipo de daño que afecte su legibilidad. \n\nTen en cuenta:\n- Documento limpio: sin manchas, arrugas, roturas, manchas de tinta, decoloración severa o partes faltantes.\n- Documento no legible: cualquier daño físico o digital que dificulte o impida la lectura completa del contenido (borroso, muy oscuro, con secciones faltantes, etc.).\n\nDevuelve la respuesta en el siguiente formato JSON, sin texto adicional:\n\n{\n  \"document_type\": \"documento_limpio\" \n}\n\no\n\n{\n  \"document_type\": \"documento_no_legible\"\n}\n",
        "inputType": "base64",
        "binaryPropertyName": "File",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        160,
        256
      ],
      "id": "3a59d397-f2e5-4b0a-8b85-827203e1c0e1",
      "name": "Analyze image",
      "credentials": {
        "openAiApi": {
          "id": "NpXtRw5pOJDLxlLo",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "\nconst results = [];\n\nfor (const item of items) {\n\t// Obtener el texto del campo content\n\tconst rawContent = item.json.content;\n\n\ttry {\n\t\t// Convertir el string JSON en objeto\n\t\tconst parsed = JSON.parse(rawContent);\n\n\t\t// Devolver el objeto como salida\n\t\tresults.push({ json: parsed });\n\t} catch (error) {\n\t\t// En caso de error de parseo, devolver mensaje de error\n\t\tresults.push({\n\t\t\tjson: {\n\t\t\t\terror: 'No se pudo parsear el contenido',\n\t\t\t\traw: rawContent\n\t\t\t}\n\t\t});\n\t}\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        368,
        256
      ],
      "id": "eab6a1d3-c5f9-4309-ae42-30ac3ae078c0",
      "name": "Code"
    }
  ],
  "pinData": {},
  "connections": {
    "Check if Clean Document": {
      "main": [
        [
          {
            "node": "Merge Original Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Original Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Original Data": {
      "main": [
        [
          {
            "node": "Route Based on Classification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route Based on Classification": {
      "main": [
        [
          {
            "node": "Upload to Clean Bucket1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Upload to Degraded Bucket1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Generation Status1": {
      "main": [
        [
          {
            "node": "Check Completion1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Completion1": {
      "main": [
        [
          {
            "node": "Update Dataset Stats1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Check Generation Status1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Dataset Stats1": {
      "main": [
        [
          {
            "node": "Response - Success1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload to Clean Bucket1": {
      "main": [
        [
          {
            "node": "Generate Training Pairs1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload to Degraded Bucket1": {
      "main": [
        [
          {
            "node": "Response - Error (Degraded)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook - Data Upload1": {
      "main": [
        [
          {
            "node": "Merge Original Data",
            "type": "main",
            "index": 1
          },
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Check if Clean Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "511c3943-e3bf-4061-af47-b97654643f31",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d13ab81f2db054284e227cd6077085c0ab200f7088bc18e4d61ee9fa18915bc4"
  },
  "id": "m8RrRIQms3yHQQMd",
  "tags": []
}